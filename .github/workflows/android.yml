name: Build OpenCV-contrib for Android

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      OCV_VER: 4.6.0
      PACKAGE_NAME: opencv-4.6.0-android
      NDK_VER: 25.1.8937393
      
    steps:
    
#       - uses: nttld/setup-ndk@v1
#         id: setup-ndk
#         with:
#           ndk-version: r25b
#           add-to-path: false

#       - name: Install tools
#         run: |
#           sudo apt-get update 2>&1 > /dev/null
#           sudo apt-get install -y ninja-build

      - name: Prepare NDK dir for caching
        run: |
          sudo mkdir -p ${ANDROID_HOME}/ndk
          sudo chmod -R 777 ${ANDROID_HOME}/ndk
          sudo chown -R $USER:$USER ${ANDROID_HOME}/ndk

      - name: NDK Cache
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: ${ANDROID_HOME}/ndk
          key: ndk-cache-${NDK_VER}-v1

      - name: Install NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;${NDK_VER}"

      - name: Tools report
        run: |
         type gcc ninja curl grep sed tr cmake git python3 2>&1 || true
         gcc --version
         # ninja --version
         python3 --version
         cmake --version
         echo ANDROID_HOME is ${ANDROID_HOME}
         # echo ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
         echo Building OpenCV version: ${OCV_VER}
         echo Expected package name: ${PACKAGE_NAME}.zip

      - uses: actions/checkout@v3
      
      #- name: set up JDK 11
      #  uses: actions/setup-java@v3
      #  with:
      #    java-version: '11'
      #    distribution: 'temurin'
      #    cache: gradle

      - name: Prepare Cache Key
        run: |
          echo "https://github.com/opencv/opencv/archive/refs/tags/${OCV_VER}.tar.gz" >> cache_key.txt
          echo "https://github.com/opencv/opencv_contrib/archive/refs/tags/${OCV_VER}.tar.gz" >> cache_key.txt
          
      - name: Cache Downloads
        id: cache-downloads
        uses: actions/cache@v3
        with:
            path: |
              ./cache/
            key: ${{ hashFiles('cache_key.txt') }}

      - name: Download if Needed
        if: steps.cache-downloads.outputs.cache-hit != 'true'
        run: |
            mkdir -p ./cache
            curl -o ./cache/opencv-${OCV_VER}.tar.gz -L "https://github.com/opencv/opencv/archive/refs/tags/${OCV_VER}.tar.gz"
            curl -o ./cache/opencv_contrib-${OCV_VER}.tar.gz -L "https://github.com/opencv/opencv_contrib/archive/refs/tags/${OCV_VER}.tar.gz"

      - name: Extract OpenCV & OpenCV Contrib
        run: |
          tar xf ./cache/opencv-${OCV_VER}.tar.gz
          tar xf ./cache/opencv_contrib-${OCV_VER}.tar.gz
          ls -l


